@model DashboardViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-3">
        <div class="card">
           <div class=" icon-user">
                @* <span class="svg-icon svg-icon-white svg-icon-2x">
                    <!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-05-14-112058/theme/html/demo8/dist/../src/media/svg/icons/General/User.svg-->
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                            <polygon points="0 0 24 0 24 24 0 24" />
                            <path d="M12,11 C9.790861,11 8,9.209139 8,7 C8,4.790861 9.790861,3 12,3 C14.209139,3 16,4.790861 16,7 C16,9.209139 14.209139,11 12,11 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
                            <path d="M3.00065168,20.1992055 C3.38825852,15.4265159 7.26191235,13 11.9833413,13 C16.7712164,13 20.7048837,15.2931929 20.9979143,20.2 C21.0095879,20.3954741 20.9979143,21 20.2466999,21 C16.541124,21 11.0347247,21 3.72750223,21 C3.47671215,21 2.97953825,20.45918 3.00065168,20.1992055 Z" fill="#000000" fill-rule="nonzero" />
                        </g>
                    </svg><!--end::Svg Icon-->
                </span> *@
           </div>

        
            <div class="card-body p-3">
                <h3 class="">عدد المستخدمين</h3>
                <h3 class="">@Model.NumberOfUser</h3>
            </div>
        </div>
    </div>


    <div class="col-3">
        <div class="card">
            <div class="card-body p-3">
                <h3 class="">عدد الاخبار</h3>
                <h3 class="">@Model.NumberOfPost</h3>
            </div>
        </div>
    </div>


    <div class="col-3">
        <div class="card">
            <div class="card-body p-3">
                <h3 class="">عدد التسجيلات</h3>
                <h3 class="">@Model.NumberOfTrack</h3>
            </div>
        </div>
    </div>


    <div class="col-3">
        <div class="card">
            <div class="card-body p-3">
                <h3 class="">عدد إعلان</h3>
                <h3 class="">@Model.NumberOfAdvertisement</h3>
            </div>
        </div>
    </div>
</div>
<br />
<hr />

<div class="row d-flex w-50 flex-nowrap chart-js">
    <div class="col-md-6 m-3 col-lg-6  chart-js-one">
        <h1 class="text-start m-1 mt-2">Users</h1>
        <canvas id="userTypeChart"></canvas>

    </div>
    <div class=" col-md-6 col-lg-6 m-3  chart-js-two">
        <h1 class="text-start m-1 mt-2">Content</h1>
        <canvas id="contentTypeChart"></canvas>
    </div>
  
    </div>
<br />
<br />

<div class="row">
    <div class="col-8" >
        <canvas id="contentByMohnthChart"></canvas>
    </div>
</div>
<br />

@section Scripts{

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
 
   <script>
       var userTypeCanvas = document.getElementById('userTypeChart').getContext('2d');
       var userTypeChartLabels = [];
       var userTypeChartValues = [];
        var userTypeChartColors = [];
        var contentTypeCanvas = document.getElementById('contentTypeChart').getContext('2d');
        var contentTypeChartLabels = [];
        var contentTypeChartValues = [];
        var contentTypeChartColors = [];

        var contentByMonthChartCanvas = document.getElementById('contentByMohnthChart').getContext('2d');
        var contentByMohnthChartLabels = [];
        var contentByMohnthChartValues = [];
        var contentByMohnthChartColors = [];

        $.ajax({
            url: "/Home/GetByMonthChart", success: function (result) {
                $(result).each(function (index) {
                    contentByMohnthChartLabels.push(result[index].key);
                    contentByMohnthChartValues.push(result[index].value);
                    contentByMohnthChartColors.push(result[index].color);
                });




                //const ctx = document.getElementById('userTypeChart');

                var contentByMohnthChart = new Chart(contentByMonthChartCanvas, {
                    type: 'bar',
                    data: {
                        labels: contentByMohnthChartLabels,
                        datasets: [{
                            label: '# of Votes',
                            data: contentByMohnthChartValues,
                            backgroundColor: contentByMohnthChartColors
                        }]
                    },
                    options: {

                    }
                });
            }
        });

       $.ajax({
            url: "/Home/GetContentTypeChartData", success: function (result) {
               $(result).each(function (index) {
                    contentTypeChartLabels.push(result[index].key);
                    contentTypeChartValues.push(result[index].value);
                    contentTypeChartColors.push(result[index].color);
               });




               //const ctx = document.getElementById('userTypeChart');

                var contentTypeChart = new Chart(contentTypeCanvas, {
                    type: 'doughnut',
                   data: {
                        labels: contentTypeChartLabels,
                       datasets: [{
                           label: '# of Votes',
                            data: contentTypeChartValues,
                            backgroundColor: contentTypeChartColors
                       }]
                   },
                    options: {
                        responsive: false,

                        plugins: {
                            legend: {
                                position: 'right',

                              
                            },
                        }
                    }
               });
           }
        });


        $.ajax({
            url: "/Home/GetChartData", success: function (result) {
                $(result).each(function (index) {
                    userTypeChartLabels.push(result[index].key);
                    userTypeChartValues.push(result[index].value);
                    userTypeChartColors.push(result[index].color);
                });




                //const ctx = document.getElementById('userTypeChart');

                var userTypeChart = new Chart(userTypeCanvas, {
                    type: 'doughnut',
                    data: {
                        labels: userTypeChartLabels,
                        datasets: [{
                            label: '# of Votes',
                            data: userTypeChartValues,
                            backgroundColor: userTypeChartColors
                        }]
                    },
                    options: {
                        responsive: false,

                        plugins: {
                            legend: {
                                position: 'right',


                            },
                        }
                    }
                });
            }
        });

    </script>
}
